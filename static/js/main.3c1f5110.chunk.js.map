{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","searchField","type","value","onChange","App","state","fetch","then","response","json","users","setState","this","filteredMonsters","filter","toLowerCase","includes","e","target","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uUAWeA,EARF,SAACC,GAAD,OACT,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCMXC,EARE,SAACR,GAAD,OACb,qBAAKC,UAAU,YAAf,SACKD,EAAMS,SAASC,KAAI,SAACN,GAAD,OAChB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCOhBM,G,MAZG,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAcC,EAA9B,EAA8BA,YAA9B,OACd,8BACI,uBACIb,UAAU,SACVc,KAAK,SACLH,YAAaA,EACbI,MAAOF,EACPG,SAAUJ,QCgCPK,E,kDAnCb,aAAe,IAAD,8BACZ,gBAEKC,MAAQ,CACXV,SAAU,GACVK,YAAa,IALH,E,qDASd,WAAqB,IAAD,OAClBM,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKC,SAAS,CAAEhB,SAAUe,S,oBAG/C,WAAU,IAAD,SAC2BE,KAAKP,MAA/BV,EADD,EACCA,SAAUK,EADX,EACWA,YACZa,EAAmBlB,EAASmB,QAAO,SAACxB,GAAD,OACvCA,EAAQE,KAAKuB,cAAcC,SAAShB,EAAYe,kBAGlD,OACE,sBAAK5B,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CACEW,YAAY,kBACZC,aAAc,SAACkB,GAAD,OAAO,EAAKN,SAAS,CAAEX,YAAaiB,EAAEC,OAAOhB,SAC3DF,YAAaY,KAAKP,MAAML,cAE1B,cAAC,EAAD,CAAUL,SAAUkB,W,GA9BVM,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.3c1f5110.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\n\r\nconst Card = (props) => (\r\n    <div className=\"card-container\">\r\n        <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\r\n        <h2>{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n);\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport './card-list.styles.css';\r\n\r\nimport Card from '../card/card.component';\r\n\r\nconst CardList = (props) => (\r\n    <div className=\"card-list\">\r\n        {props.monsters.map((monster) => (\r\n            <Card key={monster.id} monster={monster} />\r\n        ))}\r\n    </div>\r\n);\r\n\r\nexport default CardList;\r\n","import React from 'react';\r\nimport './search-box.styles.css';\r\n\r\nconst SearchBox = ({ placeholder, handleChange, searchField }) => (\r\n    <div>\r\n        <input\r\n            className=\"search\"\r\n            type=\"search\"\r\n            placeholder={placeholder}\r\n            value={searchField}\r\n            onChange={handleChange}\r\n        />\r\n    </div>\r\n);\r\n\r\nexport default SearchBox;\r\n","import { Component } from \"react\";\r\nimport \"./App.css\";\r\n\r\nimport CardList from \"./components/card-list/card-list.component\";\r\nimport SearchBox from \"./components/search-box/search-box.component\";\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      monsters: [],\r\n      searchField: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n      .then((response) => response.json())\r\n      .then((users) => this.setState({ monsters: users }));\r\n  }\r\n\r\n  render() {\r\n    const { monsters, searchField } = this.state;\r\n    const filteredMonsters = monsters.filter((monster) =>\r\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\r\n    );\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <h1>Monster Rolodex</h1>\r\n        <SearchBox\r\n          placeholder=\"search monsters\"\r\n          handleChange={(e) => this.setState({ searchField: e.target.value })}\r\n          searchField={this.state.searchField}\r\n        />\r\n        <CardList monsters={filteredMonsters} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}